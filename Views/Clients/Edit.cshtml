@model CustomerManagementSystem.Models.tblClient

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Client</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Screen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Screen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Screen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Agent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Agent, new { htmlAttributes = new { @class = "form-control" } })*@

                @Html.DropDownListFor(model => model.Agent, ViewBag.Agent as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Agent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Status, ViewBag.Status as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Source, ViewBag.Source as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(model => model.IP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IP, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    DateTime dtstartDate = Model.StartDate;
                    var startDate = dtstartDate.ToString("dd/MM/yyyy");
                }
                @Html.EditorFor(model => startDate, new { htmlAttributes = new { @class = "form-control  date-picker" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    DateTime dtendtDate = Model.EndDate;
                    var endDate = dtendtDate.ToString("dd/MM/yyyy");
                }
                @Html.EditorFor(model => endDate, new { htmlAttributes = new { @class = "form-control  date-picker" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    

    <div class="form-group row">
        <div class="col-sm-6">
            <div class="col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

        <div class="col-sm-6">
            <div class="col-md-10">
                
            </div>
        </div>
    </div>
</div>
}

&nbsp;&nbsp;&nbsp;

<div>
    <button type="button" class="btn btn-danger btn-lg" onclick="location.href='@Url.Action("Delete", new { id = Model.ID })'">Delete</button>
    &nbsp;&nbsp;&nbsp;
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
